"""Add role column to User

Revision ID: e7e49651d601
Revises: 539694caa741
Create Date: 2024-11-17 11:03:01.673083

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'e7e49651d601'
down_revision: Union[str, None] = '539694caa741'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_strategy_email', table_name='strategy')
    op.drop_index('ix_strategy_id', table_name='strategy')
    op.drop_table('strategy')
    op.drop_index('ix_backtest_email', table_name='backtest')
    op.drop_index('ix_backtest_id', table_name='backtest')
    op.drop_index('ix_backtest_symbol', table_name='backtest')
    op.drop_table('backtest')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backtest',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('symbol', sa.VARCHAR(), nullable=True),
    sa.Column('start', sa.VARCHAR(), nullable=True),
    sa.Column('end', sa.VARCHAR(), nullable=True),
    sa.Column('fees', sa.INTEGER(), nullable=True),
    sa.Column('slippage', sa.INTEGER(), nullable=True),
    sa.Column('strategies', sqlite.JSON(), nullable=True),
    sa.Column('sharpe_ratio', sa.INTEGER(), nullable=True),
    sa.Column('max_drawdown', sa.INTEGER(), nullable=True),
    sa.Column('cagr', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_backtest_symbol', 'backtest', ['symbol'], unique=False)
    op.create_index('ix_backtest_id', 'backtest', ['id'], unique=False)
    op.create_index('ix_backtest_email', 'backtest', ['email'], unique=False)
    op.create_table('strategy',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('allocation', sa.INTEGER(), nullable=True),
    sa.Column('positionType', sa.VARCHAR(), nullable=True),
    sa.Column('entryRules', sqlite.JSON(), nullable=True),
    sa.Column('exitRules', sqlite.JSON(), nullable=True),
    sa.Column('active', sa.BOOLEAN(), nullable=True),
    sa.Column('regime_filter', sa.VARCHAR(), nullable=True),
    sa.Column('position_size_method', sa.VARCHAR(), nullable=True),
    sa.Column('fixed_position_size', sa.FLOAT(), nullable=True),
    sa.Column('volatility_target', sa.FLOAT(), nullable=True),
    sa.Column('volatility_lookback', sa.INTEGER(), nullable=True),
    sa.Column('volatility_buffer', sa.FLOAT(), nullable=True),
    sa.Column('max_leverage', sa.FLOAT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_strategy_id', 'strategy', ['id'], unique=False)
    op.create_index('ix_strategy_email', 'strategy', ['email'], unique=1)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=1)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=1)
    # ### end Alembic commands ###
